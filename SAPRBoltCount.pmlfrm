-----------------
-- Author:          Sergey Belomestnykh
-- Created:         27/01/2012
-- Description: 
-- Форма для подсчета болтовых соединений на фланцах и открытия спецификации
-----------------
kill !!SAPRBoltCount
setup form !!SAPRBoltCount size 35 2.5
title 'Подсчет болтовых соединений'
	 !!SAPRBoltCount.initcall = '!this.SAPRBoltCount()'
   frame .frame1 '' height 0.5
   !!MarkSelec = 'falseMark'
	 para   .SelecPipe at x0.5 ymax text 'Выберите элементы'
	 button .PipeSelec 'Добавить' at x 20 y0.5 width 28 height 1.0 CALL |!this.PipeSelec()|
 	 PATH DOWN
     list .ElemList at x0 width 47 lines 5
 	 PATH DOWN
	 button .ClearList 'Очистить список' at x34 width 14 height 0.8 CALL |!this.ElemList.clear()|
  exit
   PATH DOWN
   VDIST 0.1
   frame .frame2 '' height 0.5
     para   .file at x0.5 ymax text 'Выберите csv файл:'
     button .browse 'Обзор...' at x 14 y0.5 width 10 height 1.0
	 PATH RIGHT
	 HDIST 1.0
 	 button .BoltCount 'Подсчитать' width 10 height 1.0 CALL |!this.CountOfBolt()|
 	 HDIST 1.0
 	 button .CreateSpec 'Cпецификация' width 10 height 1.0 CALL |!this.CreateSpecification()|
   exit
	 PATH DOWN
	 button .AttrFlan 'Просмотр атрибутов фланцев' width 20 height 0.8 CALL |!this.AttrFlange()|
	 PATH RIGHT
	 HDIST 10.0
	 button .Help 'Справка' width 8 height 0.8 CALL |!this.Help()|
	 HDIST 1.0
	 button .Dismiss 'Dismiss' width 8 height 0.8 CANCEL
	 PATH DOWN
	 PARAGRAPH .Message1 at x0 width 50 height 0.8
exit
-----------------
Define Method .SAPRBoltCount()
!this.browse.callback = '!!SAPRBoltCount.browse()'
	 !AttrElem[1] = 'RefNo выбранных элементов PIPE или BRAN'
	 !this.ElemList.SetHeadings( !AttrElem )
Endmethod
-----------------
-- Метод для формирования массива выбранных элементов
Define Method .PipeSelec()

	 IF ( ( TYPE OF CE NEQ 'PIPE' ) AND ( TYPE OF CE NEQ 'BRAN' ) ) THEN
		 !!ALERT.ERROR ('Выбранный элемент не имеет тип PIPE или BRAN')
		 RETURN
	 ENDIF

	 !TypePipeElem = TYPE OF CE
	 !NamePipeElem = NAME OF CE
	 !DTextToList = '$!TypePipeElem' & ' ' & '$!NamePipeElem'
     !this.ElemList.Add( '$!DTextToList' )
 	 HANDLE ANY $*
		 RETURN
	 ENDHANDLE

Endmethod
-----------------
-- Метод для подсчета болтового соединения
Define Method .CountOfBolt()
	 -- Условие для проверки выбора csv файла
	 IF ( Length('$!!FileBrowser.file') EQ 0 ) THEN
		 !!ALERT.ERROR ('Файл csv не выбран!')
		 RETURN
     ENDIF
	 -- Условие для проверки наличия в выбранном csv файле информации о болтовом соединении
	 IF ( !this.WorkWithFile() EQ 'falseCsv') THEN
		 !!ALERT.ERROR ('Файл csv уже содержит информацию о болтовых соединениях!')
		 RETURN
	 ENDIF
	 !backTOCE = !!CE
	 -- Условие для проверки типа текущего элемента
	 IF (( !!CE.TYPE NEQ 'PIPE') AND ( !!CE.TYPE NEQ 'BRAN')) THEN
		 !!ALERT.ERROR ('Выбранный элемент не имеет тип PIPE или BRAN!')
		 RETURN
	 ENDIF

	 -- Получение информации о количестве выбранных элементов
	 -- !PipeElemCount = !this.ElemList.Count
	 -- !PipeElemSign = !this.ElemList.Rtext

		 -- считывание массива из LIST с информацией о выбранных элементах
		 !PipeElemRtext = !this.ElemList.Rtext

		 !PipeElemCount = !PipeElemRtext.Size()

		 DO !iPipeElem from 1 to $!PipeElemCount
			 -- считывание имени проверяемых элементов
			 !PipeElemName[$!iPipeElem] = PART ( '$!PipeElemRtext[$!iPipeElem]' , 2 )
			 -- получение RefNo по имени проверяемого элемента
			 !PipeElemSign[$!iPipeElem] = RefNo of $!PipeElemName[$!iPipeElem]
		 ENDDO

	 -- Считывание информации об элементах в PIPE и BRAN и помещение в отдельные массивы
	 DO !ipipe from 1 to $!PipeElemCount
		 $!PipeElemSign[$!ipipe]
		 VAR !BMEM$!ipipe COLL ALL BRAN MEM FOR CE 
	 ENDDO

	 !InterArrays = ARRAY ()
	 !SizeArray = ARRAY ()
	 !lsaBMEM = ARRAY ()

	 -- Объединение элементов со всех BRAN и PIPE в один массив
	 DO !ipipe from 1 to $!PipeElemCount
		 !InterArrays = !BMEM$!ipipe
		 !SizeArray[$!ipipe] = !InterArrays.Size()
		 DO !indexpipe from 1 to $!SizeArray[$!ipipe]
			 !lsaBMEM.Append(!InterArrays[$!indexpipe])
		 ENDDO
	 ENDDO
	 -- lsaBMEM - итоговый массив, содержащий все элементы

	 -- Массивы для помещения информации о болтах, гайках и шайбах в выходной файл
	 !BoltText = ARRAY()
	 !NutText = ARRAY()
	 !WashText = ARRAY()
	 !N = 0
	 DO !x from 1 to !lsaBMEM.Size()
	 $!lsaBMEM[$!x]
     skip IF ( !!CE.Type NEQ 'FLAN' )
		 $!lsaBMEM[$!x]
		 -- Программная конструкция для исключения из подсчета второго фланца в соединении
			 prev
			 IF ( !!CE.Type NEQ 'GASK' ) THEN
				 GOLABEL /L1
			 ENDIF
			 prev
			 HANDLE (2,113)
				 -- Имя ошибки: Cписок для BRANCH исчерпан
				 GOLABEL /L1
			 ENDHANDLE
			 IF ( !!CE.Type EQ 'FLAN' ) THEN
				 GOLABEL /L2
			 ENDIF
			 LABEL /L1
		 $!lsaBMEM[$!x]
		 !N = $!N + 1
	 !NameFlan = SUBSTRING ( FLNM of $!lsaBMEM[$!x] , 1 , 9 )
	 -- Получение длины 3-го компонента (болта) болтового соединения в точке р2 элемента
	 VAR !lsaBLEN P2 BOLT 3 BLEN
		 HANDLE (61, 638)
			 !ErrorCE = !!CE
			 !!ALERT.ERROR ('Фланец '&'$!ErrorCE'&' выбранного трубопровода не присоединен к оборудованию!')
			 RETURN
		 ENDHANDLE
	 -- Получение диаметра 3-го компонента (болта) болтового соединения в точке р2 элемента
	 VAR !lsaBDIA P2 BOLT 3 BDIA
	 -- Получение ссылки на спецификацию, содержащую болтовые соединения
	 VAR !lsaBSPEC BSPEC OF PSPEC OF OWNER
	 -- Получение количества 1-ого компонента (гаек) болтового соединения в точке p2 элемента
	 VAR !lsaNumbNut P2 BOLT1 NOFF
	 -- Получение количества 2-ого компонента (шайб) болтового соединения в точке p2 элемента
	 VAR !lsaNumbWash P2 BOLT2 NOFF
	 -- Получение количества болтов в болтовом соединении
	 !lsaBTSE = !!CE.Spref.Catref.Blrf[1].Memb.Size()
	 VAR !lsaBSPCO COLL ALL SPCO WITH ( ANSW OF OWNE of owne EQ $!lsaBDIA ) FOR $!lsaBSPEC
		 DO !y from 1 to !lsaBSPCO.Size()
			 $!lsaBSPCO[$!y]
--			 $p $!lsaBSPCO[$!y]
-- ПОЛУЧЕНИЕ И ВЫВОД ИНФОРМАЦИИ ПО БОЛТАМ
			 IF ( ( TANSW EQ 'A') AND ( TANSW OF OWNER EQ 'BOLT' ) ) THEN
				 -- Получение таблиц длин и поиск номер полученной длины
				 !lsaIniLenNBolt  = !lsaBSPCO[$!y].Dbref().Bltref.Nstdb.Blen.FindFirst ( !lsaBLEN.Real() )
				 -- Получение длина болта
				 !lsaBlenDataBolt = blen [ $!lsaIniLenNBolt ] of nstdb of bltref of $!lsaBSPCO[$!y]
--	 	 		 $p $!lsaBlenDataBolt
 				 -- Получение детального текста
				 IF ( Detref EQ Nulref ) THEN
					 !DetailTextOutBolt = '0.00'
					 ELSEIF (  Rtext of Detref EQ '' ) THEN
					 !DetailTextOutBolt = '0.00'
					 ELSE
					 !lsaDetTextBolt = Rtext of Detref
--					 $p 1: $!lsaDetTextBolt
					 !DetTextWithLengthBolt = $!lsaDetTextBolt
--					 $p 2: $!DetTextWithLengthBolt
					 !DetailTextOutBolt = Replace ( '$!DetTextWithLengthBolt' , 'g ', 'gx' & '$!lsaBlenDataBolt' )
--					 $p 3: $!DetailTextOutBolt
				 ENDIF
				 -- Получение материального текста
				 IF ( Matxt EQ Nulref ) THEN
					 !lsaMatTextBolt = '0.00'
					 ELSEIF (  Xtext of Matxt EQ '' ) THEN
					 !lsaMatTextBolt = '0.00'
					 ELSE
					 !lsaMatTextBolt = Xtext of Matxt
				 ENDIF
				 -- Получение единичной массы болта
				 !lsaIniWeigUnitBolt = !lsaBSPCO[$!y].Dbref().Bltref.Nstdb.:studwei[$!lsaIniLenNBolt].Real()
				 -- Получение общего веса болтов
				 !lsaIniWeigBolt  = !lsaBTSE.Real() * !lsaBSPCO[$!y].Dbref().Bltref.Nstdb.:studwei[$!lsaIniLenNBolt].Real()
				 -- Формирование элемента массива для помещения в выходной файл
				 !BoltText[$!x] = ( 'BOLT;'&'$!DetailTextOutBolt'&';'&'$!lsaMatTextBolt'&';0.00;0.00;'&'$!lsaIniWeigUnitBolt'&';'&'$!lsaBTSE'&';'&'$!lsaIniWeigBolt' )
-- ПОЛУЧЕНИЕ И ВЫВОД ИНФОРМАЦИИ ПО ГАЙКАМ
			 ELSEIF ( ( TANSW EQ 'A') AND ( TANSW OF OWNER EQ 'NUT' ) ) THEN
			 	 -- Получение детального текста
				 IF ( Detref EQ Nulref ) THEN
					 !DetTextNut = '0.00'
					 ELSEIF (  Rtext of Detref EQ '' ) THEN
					 !DetTextNut = '0.00'
					 ELSE
					 !lsaDetTextNut = Rtext of Detref
					 !DetTextNut = $!lsaDetTextNut
				 ENDIF
 				 -- Получение материального текста
				 IF ( Matxt EQ Nulref ) THEN
					 !lsaMatTextNut = '0.00'
					 ELSEIF (  Xtext of Matxt EQ '' ) THEN
					 !lsaMatTextNut = '0.00'
					 ELSE
					 !lsaMatTextNut = Xtext of Matxt
				 ENDIF
				 -- Получение единичной массы элементов
				 IF ( CMPREF EQ Nulref ) THEN
					 !OutWeigUnitNut = '0.00'
					 !lsaIniWeigNut = '0.00'
					 ELSEIF ( CWEI OF CMPREF EQ '' ) THEN
					 !OutWeigUnitNut = '0.00'
					 !lsaIniWeigNut = '0.00'
					 ELSE
					 !lsaIniWeigUnitNut = CWEI OF CMPREF
					 !OutWeigUnitNut = !lsaIniWeigUnitNut.String().After('( ').Before(' )')
					 !lsaIniWeigNut = $!lsaNumbNut * $!lsaIniWeigUnitNut
				 ENDIF
				 -- Формирование элемента массива для помещения в выходной файл
				 !NutText[$!x] = ( 'NUT;'&'$!DetTextNut'&';'&'$!lsaMatTextNut'&';0.00;0.00;'&'$!OutWeigUnitNut'&';'&'$!lsaNumbNut'&';'&'$!lsaIniWeigNut' )
-- ПОЛУЧЕНИЕ И ВЫВОД ИНФОРМАЦИИ ПО ШАЙБАМ
			 ELSEIF ( ( TANSW EQ 'A') AND ( TANSW OF OWNER EQ 'WASH' ) ) THEN
				 -- Получение детального текста
				 IF ( Detref EQ Nulref ) THEN
					 !DetTextNutWash = '0.00'
					 ELSEIF (  Rtext of Detref EQ '' ) THEN
					 !DetTextNutWash = '0.00'
					 ELSE
					 !lsaDetTextNutWash = Rtext of Detref
					 !DetTextNutWash = $!lsaDetTextNutWash
				 ENDIF
  				 -- Получение материального текста
				 IF ( Matxt EQ Nulref ) THEN
					 !lsaMatTextWash = '0.00'
					 ELSEIF (  Xtext of Matxt EQ '' ) THEN
					 !lsaMatTextWash = '0.00'
					 ELSE
					 !lsaMatTextWash = Xtext of Matxt
				 ENDIF
				 -- Получение единичной массы элементов
 				 IF ( CMPREF EQ Nulref ) THEN
					 !OutWeigUnitWash = '0.00'
					 !lsaIniWeigWash = '0.00'
					 ELSEIF ( CWEI OF CMPREF EQ '' ) THEN
					 !OutWeigUnitWash = '0.00'
					 !lsaIniWeigWash = '0.00'
					 ELSE
					 VAR !lsaIniWeigUnitWash CWEI OF CMPREF
					 !OutWeigUnitWash = !lsaIniWeigUnitWash.String().After('( ').Before(' )')
					 !lsaIniWeigWash = $!lsaNumbWash * $!lsaIniWeigUnitWash
				 ENDIF
 				 -- Формирование элемента массива для помещения в выходной файл
				 !WashText[$!x] = ( 'WASH;'&'$!DetTextNutWash'&';'&'$!lsaMatTextWash'&';0.00;0.00;'&'$!OutWeigUnitWash'&';'&'$!lsaNumbWash'&';'&'$!lsaIniWeigWash' )
			 ENDIF
		 ENDDO
	 LABEL /L2
	 ENDDO
	 !BoltText.Sort()
	 !NutText.Sort()
	 !WashText.Sort()
	 !this.WriteToCsv ( !BoltText , !NutText , !WashText )
	 !!ALERT.MESSAGE ( 'Болты, гайки и шайбы подсчитаны на '& $!N &' фланцевых соединениях' )
$!backTOCE
Endmethod
-----------------
-- Метод для запсука xls файла спецификации
Define Method .CreateSpecification()
	 !st =  trim ( 'C:\DesignMac\Формирование_ЗакСпецификацииТмо.xls' )
	 !st1 = 'start Excel ' & !st
	 SYSCOM |$!st1|
Endmethod
-----------------
-- Метод для работы с внутренними файлами формы
Define Method .WorkWithFile() is STRING
	 -- Открытие, задание метода READ и закрытие исходного файла csv
		 !FileInput = object FILE('$!!FileBrowser.file')
		 !FileInput.Open('READ')
		 !Content = ARRAY()
		 !Content = !FileInput.ReadFile()
		 !FileInput.Close()
		 !SizeContent = !Content.size()
		 !Check = '$!Content[$!SizeContent]'
	 -- Условие для определения наличия в исходном csv файле информации о болтовом соединении
	 IF ( matchw ( '$!Check','*WASH*' ) ) OR ( matchw ( '$!Check','*NUT*' ) ) OR ( matchw ( '$!Check','*BOLT*') ) THEN
		 RETURN 'falseCsv'
	 ENDIF
	 -- Открытие и задание метода OVERWRITE (переписать) для файла NameCsv.txt, который хранит адрес директории файла report.scv
		 !FileNameCsv = object FILE ( 'C:\DesignMac\NameCsv.txt' )
		 !FileNameCsv.Open('OVERWRITE')
		 !FileNameCsv.WriteRecord  ( '$!!FileBrowser.file' )
		 !FileNameCsv.Close()
		 RETURN 'trueCsv'
Endmethod
-----------------
-- Метод для записи информации о болтовых соединениях в выбранный csv файл
Define Method .WriteToCsv( !BoltTextAppend is ARRAY , !NutTextAppend is ARRAY , !WashTextAppend is ARRAY )
	 !FileInput = object FILE('$!!FileBrowser.file')
	 !FileInput.Open('APPEND')
	 !SizeArrayBolt = !BoltTextAppend.Size()
	 DO !x from 1 to $!SizeArrayBolt
		 !FileInput.WriteRecord  ( '$!BoltTextAppend[$!x]' )
		 !FileInput.WriteRecord  ( '$!NutTextAppend[$!x]' )
		 !FileInput.WriteRecord  ( '$!WashTextAppend[$!x]' )
	 ENDDO
	 !FileInput.Close()
Endmethod
-----------------
-- Метод для функционирования кнопки "Обзор" на форме
Define Method  .Browse()
!path = ( 'C:\' )
!!FileBrowser ( !path , |*.csv| , || , TRUE , |!!FileBrowser.file| )
Endmethod
-----------------
Define Method .Help()
syscom 'start iexplore U:\Manuals\HELP\SAPRBoltCount.mht'
Endmethod
-----------------
Define Method  .AttrFlange()
	 IF ( !!CE.TYPE NEQ 'FLAN') THEN
		 !!ALERT.ERROR ('Выбранный элемент не имеет тип FLAN!')
		 RETURN
	 ENDIF
	 !DetTextFlan = DTXR OF CE
 	 -- Получение длины 3-го компонента (болта) болтового соединения в точке р2 элемента
	 VAR !lsaBLEN P2 BOLT 3 BLEN
		 HANDLE (61, 638)
			 !ErrorCE = !!CE
			 !!ALERT.ERROR ('Фланец '&'$!ErrorCE'&' выбранного трубопровода не присоединен к оборудованию!')
			 RETURN
		 ENDHANDLE
	 -- Получение диаметра 3-го компонента (болта) болтового соединения в точке р2 элемента
	 VAR !lsaBDIA P2 BOLT 3 BDIA
	 !lsaBTSE = !!CE.Spref.Catref.Blrf[1].Memb.Size()
!this.Message1.val = '$!DetTextFlan'&'  Болты:'&' диам. '&'$!lsaBDIA'&'мм '&' длин. '&'$!lsaBLEN'&'мм '&' кол. '&'$!lsaBTSE'&'шт.'
Endmethod
-----------------
--Define Method .Dismiss()

--Endmethod
-----------------


